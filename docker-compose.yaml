services:
  app:
    build:
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "9999:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  db:
    image: postgres:16.8
    restart: always
    container_name: db-cont
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_grachev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  bot:
    build:
      context: /home/suprimi4/Desktop/Projects/TimeToGoBot
      dockerfile: Dockerfile
    container_name: timeToGoBot
    depends_on:
      - app
    environment:
      - BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_URL=http://app:8080

volumes:
  postgres_data_grachev: